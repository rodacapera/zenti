name: üçè iOS CI/CD - Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-14
    timeout-minutes: 45

    steps:
      # 1. Clonar el repositorio
      - name: üì• Checkout del c√≥digo
        uses: actions/checkout@v3

      # 2. Configurar Node.js
      - name: üîß Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.18.1'

      # 3. Instalar dependencias con Yarn
      - name: üì¶ Instalar dependencias
        run: yarn install --frozen-lockfile

      # 4. Limpiar e instalar pods (importante para builds limpios)
      - name: üßπ Reiniciar pods (deintegrate + install)
        run: |
          cd ios
          pod deintegrate
          pod install

      # 5. Importar certificado y perfil de aprovisionamiento
      - name: üîê Configurar firma de c√≥digo
        env:
          IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          IOS_PROFILE_BASE64: ${{ secrets.IOS_PROFILE_BASE64 }}
          IOS_CERT_PASSWORD: ${{ secrets.IOS_CERT_PASSWORD }}
        run: |
          mkdir -p ~/certs
          echo "$IOS_CERTIFICATE_BASE64" | base64 --decode > ~/certs/cert.p12
          echo "$IOS_PROFILE_BASE64" | base64 --decode > ~/certs/profile.mobileprovision

          security create-keychain -p "github" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "github" build.keychain
          security import ~/certs/cert.p12 -k build.keychain -P "$IOS_CERT_PASSWORD" -T /usr/bin/codesign

          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ~/certs/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      # 6. Compilar la app iOS (archivar)
      - name: üèóÔ∏è Build iOS App
        run: |
          cd ios
          xcodebuild -workspace Zenti.xcworkspace \
            -scheme Zenti \
            -sdk iphoneos \
            -configuration Release \
            -archivePath $PWD/build/Zenti.xcarchive \
            clean archive \
            DEVELOPMENT_TEAM=${{ secrets.APPLE_DEVELOPMENT_TEAM_ID }}

      # 7. Exportar archivo .ipa
      - name: üì¶ Exportar .ipa
        run: |
          cd ios
          xcodebuild -exportArchive \
            -archivePath build/Zenti.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath build

      # 8. Subir a TestFlight usando fastlane
      - name: üöÄ Subir a TestFlight con Fastlane
        run: |
          gem install fastlane
          fastlane pilot upload \
            --username "${{ secrets.APP_STORE_CONNECT_USERNAME }}" \
            --app_identifier "com.teranov.zentiapp" \
            --ipa "ios/build/Zenti.ipa" \
            --skip_waiting_for_build_processing true \
            --skip_submission true

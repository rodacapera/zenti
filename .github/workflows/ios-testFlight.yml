name: 🍏 iOS CI/CD - TestFlight (Manual)

on:
  workflow_dispatch:
  push:
    branches-ignore: ['*']

jobs:
  build-and-upload-ios:
    if: github.ref == 'refs/heads/develop'
    runs-on: macos-14
    timeout-minutes: 45

    steps:
      - name: 📥 Checkout del código
        uses: actions/checkout@v3

      - name: 🔧 Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.18.1'

      - name: 📦 Instalar dependencias
        run: yarn install --frozen-lockfile

      - name: 🧹 Instalar pods
        run: |
          cd ios
          pod install

      - name: 🔐 Configurar firma automática
        env:
          IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          IOS_CERT_PASSWORD: ${{ secrets.IOS_CERT_PASSWORD }}
        run: |
          mkdir -p ~/certs
          echo "$IOS_CERTIFICATE_BASE64" | base64 --decode > ~/certs/cert.p12

          security create-keychain -p "github" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "github" build.keychain
          security import ~/certs/cert.p12 -k build.keychain -P "$IOS_CERT_PASSWORD" -T /usr/bin/codesign

          security set-key-partition-list -S apple-tool:,apple: -s -k "github" build.keychain

      - name: 🏷️ Bump versión y build number
        run: |
          cd ios
          echo "📌 Marketing version: 1.0.1"
          xcrun agvtool new-marketing-version 1.0.1
          echo "📌 Build number: ${{ github.run_number }}"
          xcrun agvtool new-version -all ${{ github.run_number }}

      - name: 🏗️ Compilar App iOS (.xcarchive)
        run: |
          cd ios
          xcodebuild clean archive \
            -workspace Zenti.xcworkspace \
            -scheme Zenti \
            -archivePath build/Zenti.xcarchive \
            CODE_SIGN_STYLE=Automatic \
            DEVELOPMENT_TEAM=${{ secrets.APPLE_DEVELOPMENT_TEAM_ID }} \
            -allowProvisioningUpdates

      - name: 📦 Exportar IPA usando ExportOptions.plist existente
        run: |
          cd ios
          xcodebuild -exportArchive \
            -archivePath build/Zenti.xcarchive \
            -exportPath build \
            -exportOptionsPlist ExportOptions.plist \
            -allowProvisioningUpdates

      - name: 🔍 Buscar y validar archivo IPA
        id: find_ipa
        run: |
          IPA_PATH=$(find ios/build -type f -name "*.ipa" | head -n 1)
          if [ -z "$IPA_PATH" ]; then
            echo "❌ No se encontró ningún archivo IPA. Abortando..."
            exit 1
          fi
          echo "✅ IPA encontrada en: $IPA_PATH"
          echo "IPA_PATH=$IPA_PATH" >> $GITHUB_OUTPUT

      - name: 🚀 Subir a TestFlight con Fastlane
        run: |
          gem install fastlane
          fastlane pilot upload \
            --username "${{ secrets.APP_STORE_CONNECT_USERNAME }}" \
            --app_identifier "com.teranov.zentiapp" \
            --ipa "${{ steps.find_ipa.outputs.IPA_PATH }}" \
            --skip_waiting_for_build_processing true \
            --skip_submission true
        env:
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}

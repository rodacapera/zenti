name: üçè iOS CI/CD - TestFlight (Manual & Validaciones)

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - 'ios/**'
      - 'Podfile'
      - 'Podfile.lock'
      - '.github/workflows/ios-testflight.yml'

jobs:
  build-and-upload-ios:
    runs-on: macos-14
    timeout-minutes: 45

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      # 1Ô∏è‚É£ Importar certificado de firma (firma autom√°tica)
      - name: üîê Importar certificado al keychain
        env:
          P12_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          IOS_CERT_PASSWORD: ${{ secrets.IOS_CERT_PASSWORD }}
        run: |
          mkdir -p ios/certs
          echo "$P12_BASE64" | base64 -d > ios/certs/cert.p12

          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import ios/certs/cert.p12 \
            -k ~/Library/Keychains/build.keychain \
            -P "$IOS_CERT_PASSWORD" \
            -T /usr/bin/codesign

      # 2Ô∏è‚É£ Validar Scheme Compartido
      - name: ‚úÖ Validar Scheme Compartido
        run: |
          echo "Schemes en workspace:"
          ls ios/Zenti.xcworkspace/xcshareddata/xcschemes
          if grep -q 'Zenti' ios/Zenti.xcworkspace/xcshareddata/xcschemes/*.xcscheme; then
            echo "‚úÖ Encontrado ‚ÄòZenti‚Äô en alguno de los schemes"
          else
            echo "‚ùå No se encontr√≥ ‚ÄòZenti‚Äô en los schemes compartidos" && exit 1
          fi

      # 3Ô∏è‚É£ Dependencias JS
      - name: üîß Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.18.1'

      - name: üì¶ Cache & install JS deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --frozen-lockfile

      # 4Ô∏è‚É£ CocoaPods
      - name: üíæ Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}

      - name: Install CocoaPods
        run: sudo gem install cocoapods

      - name: Clean CocoaPods and DerivedData
        run: |
          echo "üßπ Cleaning Pods and DerivedData..."
          cd ios
          pod deintegrate || true
          rm -rf Pods
          rm -rf ~/Library/Developer/Xcode/DerivedData/*
          rm -f Podfile.lock

      - name: Install Pods
        run: |
          echo "üì¶ Installing pods..."
          cd ios
          pod install

      # 5Ô∏è‚É£ Versionado
      - name: üöÄ Bump version & build number
        run: |
          cd ios
          xcrun agvtool new-marketing-version 1.0.1
          xcrun agvtool new-version -all ${{ github.run_number }}
          cd ..

      # 6Ô∏è‚É£ Seleccionar Xcode
      - name: üî® Seleccionar Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: üìã Ver versi√≥n de Xcode
        run: |
          xcode-select -p
          xcodebuild -version

      # 7Ô∏è‚É£ Instalar Fastlane
      - name: üì¶ Instalar Fastlane
        run: sudo gem install fastlane -NV

      # 8Ô∏è‚É£ Build y subir a TestFlight con Fastlane (firma autom√°tica)
      - name: üöÄ Build y subir a TestFlight con Fastlane
        env:
          APPLE_ID: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        run: |
          cd ios
          fastlane beta

      # 9Ô∏è‚É£ Logs de Fastlane (solo si falla)
      - name: üîç Verificar existencia de logs de Fastlane
        if: failure()
        run: ls -l /Users/runner/Library/Logs/gym || echo "No existe el directorio de logs"

      - name: üîç Mostrar logs de Fastlane si existen
        if: failure()
        run: |
          if [ -d "/Users/runner/Library/Logs/gym" ]; then
            echo "=== Contenido de /Users/runner/Library/Logs/gym ==="
            ls -l /Users/runner/Library/Logs/gym
            cat /Users/runner/Library/Logs/gym/*.log || true
          fi
          if [ -d "ios/fastlane/logs" ]; then
            echo "=== Contenido de ios/fastlane/logs ==="
            ls -l ios/fastlane/logs
            cat ios/fastlane/logs/*.log || true
          fi

      - name: üíæ Guardar log de Fastlane
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fastlane-gym-log
          path: |
            /Users/runner/Library/Logs/gym
            ios/fastlane/logs
          if-no-files-found: warn

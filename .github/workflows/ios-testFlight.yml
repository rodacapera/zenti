name: üçè iOS CI/CD - TestFlight (Manual & Path Filters)

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - 'ios/**'
      - 'Podfile'
      - 'Podfile.lock'
      - '.github/workflows/ios-testflight.yml'

jobs:
  build-and-upload-ios:
    runs-on: macos-14
    timeout-minutes: 45

    steps:
      - name: üì• Checkout del c√≥digo
        uses: actions/checkout@v3

      - name: üîß Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.18.1'

      - name: Cache Yarn
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: üì¶ Instalar dependencias
        run: yarn install --frozen-lockfile

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}

      - name: üßπ Instalar pods
        run: |
          cd ios
          pod install
          cd ..

      - name: üè∑Ô∏è Bump versi√≥n y build number
        run: |
          cd ios
          xcrun agvtool new-marketing-version 1.0.1
          xcrun agvtool new-version -all ${{ github.run_number }}
          cd ..

      - name: üèóÔ∏è Compilar y exportar IPA
        uses: yukiarrr/ios-build-action@v1.12.0
        with:
          workspace-path: ios/Zenti.xcworkspace
          project-path: ios/Zenti.xcodeproj
          scheme: Zenti
          export-method: app-store
          output-path: ios/build/Zenti.ipa
          p12-base64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          mobileprovision-base64: ${{ secrets.IOS_PROFILE_BASE64 }}
          certificate-password: ${{ secrets.IOS_CERT_PASSWORD }}
          team-id: ${{ secrets.APPLE_DEVELOPMENT_TEAM_ID }}
          code-signing-identity: 'Apple Distribution'
          custom-keychain-name: 'build'

      - name: üîç Verificar IPA
        run: ls -lh ios/build

      - name: üöÄ Subir a TestFlight con altool
        env:
          APPLE_ID: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
          APP_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        run: |
          xcrun altool \
            --upload-app \
            --type ios \
            --file ios/build/Zenti.ipa \
            --username "$APPLE_ID" \
            --password "$APP_SPECIFIC_PASSWORD" \
            --output-format xml

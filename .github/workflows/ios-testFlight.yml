name: üçè iOS CI/CD ‚Äì TestFlight

on:
  workflow_dispatch:
  push:
    branches: [develop]
    paths:
      - 'ios/**'
      - 'Podfile'
      - 'Podfile.lock'
      - '.github/workflows/ios-testflight.yml'

jobs:
  build-and-upload-ios:
    runs-on: macos-14
    timeout-minutes: 45

    steps:
      # 1Ô∏è‚É£ Checkout
      - uses: actions/checkout@v3

      # 2Ô∏è‚É£ Importar tu P12 en un keychain temporal
      - name: üîë Importar certificado de distribuci√≥n
        env:
          P12_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          P12_PASS: ${{ secrets.IOS_CERT_PASSWORD }}
        run: |
          mkdir -p ~/certs
          echo "$P12_BASE64" | base64 -d > ~/certs/cert.p12

          # Creamos e importamos en build.keychain
          security create-keychain -p "" build.keychain
          security import ~/certs/cert.p12 \
            -k ~/Library/Keychains/build.keychain \
            -P "$P12_PASS" \
            -T /usr/bin/codesign
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain

      # 3Ô∏è‚É£ Instalar dependencias JS + pods
      - uses: actions/setup-node@v3
        with:
          node-version: '20.18.1'
      - run: yarn install --frozen-lockfile
      - name: Install CocoaPods
        run: |
          cd ios
          pod install --repo-update
          cd ..

      # 4Ô∏è‚É£ (Opcional) Bump de versi√≥n
      - name: Bump marketing version & build number
        run: |
          cd ios
          xcrun agvtool new-marketing-version 1.0.1
          xcrun agvtool new-version -all ${{ github.run_number }}
          cd ..

      # 5Ô∏è‚É£ Build & Export IPA con firma autom√°tica
      - name: Build & Export IPA
        uses: yukiarrr/ios-build-action@v1.12.0
        with:
          workspace-path: ios/Zenti.xcworkspace
          scheme: Zenti
          export-method: app-store
          output-path: ios/build
          team-id: ${{ secrets.APPLE_DEVELOPMENT_TEAM_ID }}
          signing-style: Automatic
          p12-base64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          certificate-password: ${{ secrets.IOS_CERT_PASSWORD }}
          custom-keychain-name: build

      # 6Ô∏è‚É£ Debug: log bruto si falla xcodebuild
      - name: Dump raw xcodebuild log on failure
        if: failure()
        run: |
          echo "üö® xcodebuild raw output:"
          cat /Users/runner/Library/Logs/gym/Zenti-Zenti.log || echo "‚ö†Ô∏è Log no encontrado"

      # 7Ô∏è‚É£ Verificar IPA
      - name: Verificar IPA generado
        run: |
          ls -lh ios/build
          test -f ios/build/Zenti.ipa || (echo "‚ùå IPA no generado" && exit 1)

      # 8Ô∏è‚É£ Subir a TestFlight via altool
      - name: Upload to TestFlight
        env:
          APPLE_ID: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
          APP_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        run: |
          xcrun altool --upload-app \
            --type ios \
            --file ios/build/Zenti.ipa \
            --username "$APPLE_ID" \
            --password "$APP_SPECIFIC_PASSWORD" \
            --output-format xml

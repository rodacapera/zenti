name: üçè iOS CI/CD - TestFlight (Manual & Validaciones)

on:
  workflow_dispatch:
  push:
    branches: [develop]
    paths:
      - 'ios/**'
      - 'Podfile'
      - 'Podfile.lock'
      - '.github/workflows/ios-testflight.yml'

jobs:
  build-and-upload-ios:
    runs-on: macos-14
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v3

      # 1Ô∏è‚É£ Validaci√≥n temprana de secretos (certificado + perfil)
      - name: üîê Validar secretos P12 y provisioning profile
        env:
          P12_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          PROFILE_BASE64: ${{ secrets.IOS_PROFILE_BASE64 }}
        run: |
          mkdir -p ios/certs
          echo "$P12_BASE64" | base64 -d > ios/certs/cert.p12
          echo "$PROFILE_BASE64" | base64 -d > ios/certs/profile.mobileprovision

          file ios/certs/cert.p12   # debe decir algo como: ‚ÄúPKCS #12‚Äù
          file ios/certs/profile.mobileprovision  # debe decir ‚Äúdata‚Äù

          security cms -D -i ios/certs/profile.mobileprovision -o /tmp/profile.plist
          grep -A1 '<key>TeamIdentifier</key>' /tmp/profile.plist || (echo "‚ùå TeamIdentifier no encontrado" && exit 1)
          grep -A1 '<key>UUID</key>' /tmp/profile.plist || (echo "‚ùå UUID no encontrado" && exit 1)
          grep -A1 '<key>Name</key>' /tmp/profile.plist || (echo "‚ùå Name no encontrado" && exit 1)

      # 2Ô∏è‚É£ Validaci√≥n de scheme compartido
      - name: Validar Scheme Compartido
        run: |
          echo "üìÇ Schemes disponibles:"
          ls ios/Zenti.xcworkspace/xcshareddata/xcschemes
          if grep -q 'Zenti' ios/Zenti.xcworkspace/xcshareddata/xcschemes/*.xcscheme; then
            echo "‚úÖ Scheme Zenti compartido OK"
          else
            echo "‚ùå Scheme ‚ÄúZenti‚Äù no est√° compartido en el workspace"
            exit 1
          fi

      # 3Ô∏è‚É£ Instalar dependencias (solo si validaciones pasaron)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.18.1'

      - name: Cache Yarn
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install JS deps
        run: yarn install --frozen-lockfile

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}

      - name: Install pods
        run: |
          cd ios && pod install && cd ..

      # 4Ô∏è‚É£ Versionado
      - name: Bump version & build number
        run: |
          cd ios
          xcrun agvtool new-marketing-version 1.0.1
          xcrun agvtool new-version -all ${{ github.run_number }}
          cd ..
      - name: Seleccionar Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      # 5Ô∏è‚É£ Build y export de IPA
      - name: Build & Export IPA
        uses: yukiarrr/ios-build-action@v1.12.0
        with:
          workspace-path: ios/Zenti.xcworkspace
          project-path: ios/Zenti.xcodeproj
          scheme: Zenti
          export-method: app-store
          output-path: ios/build/Zenti.ipa
          p12-base64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          mobileprovision-base64: ${{ secrets.IOS_PROFILE_BASE64 }}
          certificate-password: ${{ secrets.IOS_CERT_PASSWORD }}
          team-id: ${{ secrets.APPLE_DEVELOPMENT_TEAM_ID }}
          export-options-plist-path: ios/ExportOptions.plist
          code-signing-identity: 'Apple Distribution'
          custom-keychain-name: 'build'

      - name: üîç Mostrar Fastlane Gym Log si falla build
        if: failure()
        run: cat /Users/runner/Library/Logs/gym/Zenti-Zenti.log || echo "‚ö†Ô∏è Log no encontrado"

      - name: Verificar IPA generado
        run: |
          ls -lh ios/build
          test -f ios/build/Zenti.ipa || (echo "‚ùå IPA no generado" && exit 1)

      # 6Ô∏è‚É£ Subir a TestFlight
      - name: Upload to TestFlight via altool
        env:
          APPLE_ID: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
          APP_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        run: |
          xcrun altool \
            --upload-app --type ios \
            --file ios/build/Zenti.ipa \
            --username "$APPLE_ID" \
            --password "$APP_SPECIFIC_PASSWORD" \
            --output-format xml
